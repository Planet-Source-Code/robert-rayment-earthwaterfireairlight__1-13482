     1                                  ;Light.asm
     2                                  ;VB
     3                                  ;Private Type BITMAP
     4                                  ;   bmType As Long          ' Type of bitmap
     5                                  ;   bmWidth As Long         ' Pixel width
     6                                  ;   bmHeight As Long        ' Pixel height
     7                                  ;   bmWidthBytes As Long    ' Byte width = 2 or 3 x Pixel width
     8                                  ;   bmPlanes As Integer     ' Color depth of bitmap
     9                                  ;   bmBitsPixel As Integer  ' Bits per pixel, must be 16 or 24
    10                                  ;   bmBits As Long          ' Pointer to bitmap data
    11                                  ;End Type
    12                                  ;Dim bmp As BITMAP
    13                                  
    14                                  %macro movab 2		;name & num of parameters
    15                                    push dword %2		;2nd param
    16                                    pop dword %1		;1st param
    17                                  %endmacro			;use  movab %1,%2
    18                                  
    19                                  %define bmW   [ebp-4]	;eg 300
    20                                  %define bmH   [ebp-8]	;eg 300
    21                                  %define bmWB  [ebp-12]	;eg 600 or 900 (16 or 24 bit color)
    22                                  %define bmpt  [ebp-16]	;pointer to pic1 memory
    23                                  %define palpt [ebp-20]	;pointer to Colors(0) palette
    24                                  %define irand [ebp-24]	;random number 0-255
    25                                  
    26                                  %define ix    [ebp-28]
    27                                  %define iy    [ebp-32]
    28                                  %define cul   [ebp-36]
    29                                  %define rads  [ebp-40]
    30                                  %define zang  [ebp-44]
    31                                  %define a42   [ebp-48]
    32                                  %define a150  [ebp-52]
    33                                  %define a10   [ebp-56]
    34                                  
    35                                  %define radc  [ebp-60]
    36                                  %define tix   [ebp-64]
    37                                  %define tiy   [ebp-68]
    38                                  
    39                                  %define cos   [ebp-72]
    40                                  %define sin   [ebp-76]
    41                                  
    42                                  %define angsto [ebp-80]
    43                                  
    44                                  %define xc   [ebp-84]
    45                                  %define yc   [ebp-88]
    46                                  [bits 32]
    47                                  
    48 00000000 55                      	push ebp
    49 00000001 89E5                    	mov ebp,esp
    50 00000003 81EC58000000            	sub esp,88
    51 00000009 57                      	push edi
    52 0000000A 56                      	push esi
    53 0000000B 53                      	push ebx
    54                                  
    55                                  	;Fill bmp structure
    56 0000000C 8B5D08                  	mov ebx,[ebp+8]
    57                                  	movab bmW,[ebx+4]
    58 0000000F FF7304              <1>   push dword %2
    59 00000012 8F45FC              <1>   pop dword %1
    60                                  	movab bmH,[ebx+8]
    61 00000015 FF7308              <1>   push dword %2
    62 00000018 8F45F8              <1>   pop dword %1
    63                                  	movab bmWB,[ebx+12]
    64 0000001B FF730C              <1>   push dword %2
    65 0000001E 8F45F4              <1>   pop dword %1
    66                                  	movab bmpt,[ebx+20]
    67 00000021 FF7314              <1>   push dword %2
    68 00000024 8F45F0              <1>   pop dword %1
    69                                  	
    70                                  	;Pointer to palette
    71 00000027 8B5D0C                  	mov ebx,[ebp+12]
    72                                  	movab palpt,ebx
    73 0000002A 53                  <1>   push dword %2
    74 0000002B 8F45EC              <1>   pop dword %1
    75                                  
    76                                  	;Pointer to zang
    77 0000002E 8B5D10                  	mov ebx,[ebp+16]
    78                                  	movab zang,[ebx]
    79 00000031 FF33                <1>   push dword %2
    80 00000033 8F45D4              <1>   pop dword %1
    81                                  	
    82                                  ;------------------------------------------------------------
    83 00000036 E440                    	in al,040h          ;Seed from timer
    84 00000038 8945E8                  	mov irand,eax
    85                                  ;------------------------------------------------------------
    86                                  	;Set up constants
    87 0000003B B80A000000              	mov eax,10
    88 00000040 8945C8                  	mov a10,eax			;10
    89                                  
    90 00000043 B8CC100000              	mov eax,4300 ;4200
    91 00000048 8945D0                  	mov a42,eax			;430
    92                                  	
    93 0000004B DB45D0                  	fild dword a42		;|a42
    94 0000004E DB45C8                  	fild dword a10
    95 00000051 DEF9                    	fdivp ST1			;|a42/10
    96 00000053 D95DD0                  	fstp dword a42		;43
    97                                  	
    98 00000056 B896000000              	mov eax,150			;Offset
    99 0000005B 8945CC                  	mov a150,eax
   100                                  	
   101 0000005E DB45C8                  	fild dword a10		;|a10
   102 00000061 DB45CC                  	fild dword a150		;|150	|10
   103 00000064 DEF9                    	fdivp ST1			;|a10/a150 .0666
   104 00000066 D9FB                    	fsincos				;|cos(zang) |sin(zang)
   105 00000068 D95DB8                  	fstp dword cos		;.99777
   106 0000006B D95DB4                  	fstp dword sin		;.00666
   107                                  	
   108 0000006E B846000000              	mov eax,70			;track radius
   109 00000073 8945C4                  	mov radc,eax
   110                                  
   111                                  ;------------------------------------------------------------
   112                                  
   113                                  	;Increment zang
   114 00000076 D945D4                  	fld dword zang
   115 00000079 D945B4                  	fld dword sin
   116 0000007C DEC1                    	faddp ST1
   117 0000007E D95DD4                  	fstp dword zang
   118                                  	
   119 00000081 8B45D4                  	mov eax,dword zang
   120 00000084 8B5D10                  	mov ebx,[ebp+16]		;save incremented zang
   121 00000087 8903                    	mov [ebx],eax
   122                                  	
   123                                  	;Find track centre		;xc,yc
   124 00000089 D945D4                  	fld dword zang	
   125 0000008C D9FB                    	fsincos					;cos	|sin
   126 0000008E DB45C4                  	fild dword radc			;rads 
   127 00000091 DEC9                    	fmulp ST1				;r*cos	|sin
   128 00000093 DB45CC                  	fild dword a150			;xc
   129 00000096 DEC1                    	faddp ST1				;xc+r*cos(angle)	|sin
   130 00000098 D95DAC                  	fstp dword xc
   131                                  
   132 0000009B DB45C4                  	fild dword radc			;rads	|sin
   133 0000009E DEC9                    	fmulp ST1				;r*sin
   134 000000A0 DB45CC                  	fild dword a150			;yc
   135 000000A3 DEC1                    	faddp ST1				;yc+r*sin(angle)
   136 000000A5 D95DA8                  	fstp dword yc
   137                                  
   138                                  ;------------------------------------------------------------
   139                                  
   140                                  	;Check if 16 or 24 bit color
   141 000000A8 8B45F4                  	mov eax,bmWB
   142 000000AB 3D58020000              	cmp eax,600
   143 000000B0 0F8441000000            	je near SixteenBit
   144                                  
   145                                  ;------------------------------------------------------------
   146                                  ;24 bit
   147                                  	;Blackout
   148 000000B6 31C0                    	xor eax,eax
   149 000000B8 B9AC070100              	mov ecx,67500		;900*300/4
   150 000000BD 8B7DF0                  	mov edi,bmpt
   151 000000C0 F3AB                    	rep stosd
   152                                  	
   153                                  	
   154                                  	;Draw circle
   155 000000C2 B8FFFFFF00              	mov eax,0FFFFFFh	;white
   156 000000C7 8945DC                  	mov cul,eax
   157 000000CA 8B4DC4                  	mov ecx,radc
   158                                  nextrad:	
   159                                  
   160 000000CD 89C8                    	mov eax,ecx
   161 000000CF BB0C000000              	mov ebx,12
   162 000000D4 F7E3                    	mul ebx
   163 000000D6 3DFC030000              	cmp eax,1020
   164 000000DB 7F0A                    	jg endcul
   165 000000DD 8B5DEC                  	mov ebx,palpt
   166 000000E0 01C3                    	add ebx,eax
   167 000000E2 8B03                    	mov eax,[ebx]
   168 000000E4 8945DC                  	mov cul,eax
   169                                  endcul:
   170                                  	
   171 000000E7 894DD8                  	mov rads,ecx	
   172 000000EA E858000000              	CALL Circler
   173 000000EF 49                      	dec ecx
   174 000000F0 75DB                    	jnz nextrad 
   175                                  	;mov eax,1
   176                                  	;sub ecx,eax
   177                                  	;cmp ecx,2
   178                                  	;ja nextrad
   179                                  	
   180 000000F2 E939000000              	jmp GETOUT
   181                                  ;##################################################################
   182                                  SixteenBit:
   183                                  
   184                                  	;Blackout
   185 000000F7 31C0                    	xor eax,eax
   186 000000F9 B9C8AF0000              	mov ecx,45000		;600*300/4
   187 000000FE 8B7DF0                  	mov edi,bmpt
   188 00000101 F3AB                    	rep stosd
   189                                  	
   190 00000103 8B4DC4                  	mov ecx,radc
   191                                  nextrad6:
   192                                  
   193 00000106 89C8                    	mov eax,ecx
   194 00000108 BB0C000000              	mov ebx,12
   195 0000010D F7E3                    	mul ebx
   196 0000010F 3DFC030000              	cmp eax,1020
   197 00000114 7F0A                    	jg endcul6
   198                                  
   199 00000116 8B5DEC                  	mov ebx,palpt
   200 00000119 01C3                    	add ebx,eax
   201 0000011B 8B03                    	mov eax,[ebx]
   202 0000011D 8945DC                  	mov cul,eax
   203                                  endcul6:
   204                                  
   205 00000120 894DD8                  	mov rads,ecx	
   206 00000123 E81F000000              	CALL Circler
   207 00000128 49                      	dec ecx
   208 00000129 75DB                    jnz nextrad6
   209                                  	
   210 0000012B E900000000              	jmp GETOUT
   211                                  
   212                                  GETOUT:
   213 00000130 5B                      	pop ebx
   214 00000131 5E                      	pop esi
   215 00000132 5F                      	pop edi
   216 00000133 89EC                    	mov esp,ebp
   217 00000135 5D                      	pop ebp
   218                                  
   219                                  
   220 00000136 66BADA03                	mov   dx,03DAh    ;Status register
   221                                  	
   222                                  	WaitForOFF:      
   223 0000013A EC                      	in    al,dx     
   224 0000013B A808                    	test  al,8	  ;Is scan OFF
   225 0000013D 75FB                    	jnz   WaitForOFF  ;No, keep waiting
   226                                  	
   227                                  	WaitForON:
   228 0000013F EC                      	in    al,dx     
   229 00000140 A808                    	test  al,8	  ;Is scan ON
   230 00000142 74FB                    	jz    WaitForON	  ;No, keep waiting
   231                                  
   232 00000144 C21000                  	ret 16
   233                                  ;====================================================
   234                                  Circler:
   235 00000147 51                      	push ecx
   236                                  
   237 00000148 B974020000              	mov ecx,628
   238                                  NextCircAng:
   239 0000014D 894DB0                  	mov angsto,ecx
   240 00000150 DB45B0                  	fild dword angsto	;|ang
   241 00000153 D9FB                    	fsincos				;|cos(ang) |sin(ang)
   242                                  	
   243 00000155 DB45D8                  	fild dword rads		;|rads		|cos(ang) |sin(ang)
   244 00000158 DEC9                    	fmulp ST1		    ;|rads*Cos(ang)|sin(ang) 
   245 0000015A D945AC                  	fld dword xc		;|xc		|rads*Cos(ang)|sin(ang)
   246 0000015D DEC1                    	faddp ST1			;|ix		|sin(ang)
   247 0000015F DB5DE4                  	fistp dword ix		;|sin(ang)
   248                                  	
   249 00000162 DB45D8                  	fild dword rads
   250 00000165 DEC9                    	fmulp ST1		    ;|rads*Sin(ang)
   251 00000167 D945A8                  	fld dword yc		;|yc
   252 0000016A DEC1                    	faddp ST1
   253 0000016C DB5DE0                  	fistp dword iy
   254                                  
   255                                  	;Check if 16 or 24 bit color
   256 0000016F 8B45F4                  	mov eax,bmWB
   257 00000172 3D58020000              	cmp eax,600
   258 00000177 740A                    	je circ16
   259                                  
   260 00000179 E89A000000              	CALL XYCul24
   261 0000017E E905000000              	jmp necx
   262                                  
   263                                  circ16:	
   264 00000183 E8BD000000              	CALL XYCul16
   265                                  necx:
   266 00000188 49                      	dec ecx
   267 00000189 75C2                    	jnz NextCircAng
   268                                  
   269 0000018B 59                      	pop ecx
   270 0000018C C3                      ret	
   271                                  ;====================================================
   272                                  Random: ;Random number 0-255 LoB irand
   273                                  		;& 4*LoB irand in eax -> offset into palette
   274 0000018D 52                      	push edx
   275 0000018E 8B45E8                  	mov eax,irand
   276                                  
   277 00000191 BA05840000              	mov edx,08405h
   278 00000196 F7E2                    	mul edx
   279 00000198 40                      	inc eax
   280 00000199 8945E8                  	mov irand,eax
   281 0000019C 25FF000000              	and eax,0FFh
   282 000001A1 BA04000000              	mov edx,4
   283 000001A6 F7E2                    	mul edx
   284 000001A8 5A                      	pop edx
   285 000001A9 C3                      ret
   286                                  ;====================================================
   287                                  Aver16:	;In ax, dx Out ax average of 16bit colors in ax & dx
   288 000001AA 53                      	push ebx
   289                                  				;                      R      G      B
   290                                  				;00000000|00000000|0(11111)(11|111)(11111)
   291 000001AB C1E003                  	shl eax,3	;00000000|000000(11|111)(11111)|(11111)000
   292 000001AE C0E804                  	shr al,4	;00000000|000000(11|111)(11111)|00001111
   293 000001B1 C1E003                  	shl eax,3	;00000000|000(11111)|(11111)000|01111000
   294 000001B4 C0EC04                  	shr ah,4	;00000000|000(11111)|00001111|01111000
   295 000001B7 C0E803                  	shr al,3	;00000000|000(11111)|00001111|00001111
   296 000001BA 0FC8                    	bswap eax	;00001111|00001111|000(11111)|00000000
   297 000001BC D0EC                    	shr ah,1	;00001111|00001111|00001111|00000000
   298                                  				;   B1       G1       R1
   299 000001BE C1E203                  	shl edx,3	;00000000|000000(11|111)(11111)|(11111)000
   300 000001C1 C0EA04                  	shr dl,4	;00000000|000000(11|111)(11111)|00001111
   301 000001C4 C1E203                  	shl edx,3	;00000000|000(11111)|(11111)000|01111000
   302 000001C7 C0EE04                  	shr dh,4	;00000000|000(11111)|00001111|01111000
   303 000001CA C0EA03                  	shr dl,3	;00000000|000(11111)|00001111|00001111
   304 000001CD 0FCA                    	bswap edx	;00001111|00001111|000(11111)|00000000
   305 000001CF D0EE                    	shr dh,1	;00001111|00001111|00001111|00000000
   306                                  				;   B2       G2       R2
   307 000001D1 0FC8                    	bswap eax
   308 000001D3 0FCA                    	bswap edx
   309 000001D5 01D0                    	add eax,edx ;00000000| Av Red | Av Green | Av Blue
   310                                  
   311 000001D7 88C3                    	mov bl,al	;00001111
   312 000001D9 88E7                    	mov bh,ah	;00001111
   313 000001DB C0E303                  	shl bl,3	;01111000 bx=00001111|01111000
   314 000001DE 66C1EB03                	shr bx,3	;bx = 000000(01|111)(01111)
   315 000001E2 0FC8                    	bswap eax	;Av Blue | Av Green |000(01111)|00000000
   316 000001E4 88E0                    	mov al,ah
   317 000001E6 C0E002                  	shl al,2	;0(01111)00
   318 000001E9 00C7                    	add bh,al
   319 000001EB 6689D8                  	mov ax,bx
   320                                  	
   321 000001EE 5B                      	pop ebx
   322 000001EF C3                      ret
   323                                  ;====================================================
   324                                  Conv16:	;In eax 24bit Out ax 16bit
   325                                  		;              R       G       B
   326                                  		;00000000|11111111|11111111|11111111	
   327                                  		;                     ah       al
   328 000001F0 53                      	push ebx
   329 000001F1 C0E803                  	shr al,3	;00000000|11111111|11111111|00011111
   330 000001F4 C0EC03                  	shr ah,3	;00000000|11111111|00011111|00011111
   331 000001F7 0FC8                    	bswap eax	;00011111|00011111|11111111|00000000
   332 000001F9 C0EC03                  	shr ah,3	;00011111|00011111|00011111|00000000
   333 000001FC 0FC8                    	bswap eax	;00000000|00011111|00011111|00011111
   334 000001FE C0E003                  	shl al,3	;00000000|00011111|00011111|11111000
   335 00000201 66C1E803                	shr ax,3	;00000000|00011111|00000011|11111111
   336 00000205 88E3                    	mov bl,ah	;00000011
   337 00000207 0FC8                    	bswap eax	;11111111|00000011|00011111|00000000
   338 00000209 88E7                    	mov bh,ah	;00011111                     al
   339 0000020B 0FC8                    	bswap eax	;00000000|00011111|00000011|11111111
   340 0000020D C0E306                  	shl bl,6	;11000000
   341 00000210 66C1EB06                	shr bx,6	;00000000|01111111
   342 00000214 88DC                    	mov ah,bl	;ax is now 16bit
   343 00000216 5B                      	pop ebx
   344 00000217 C3                      ret
   345                                  ;====================================================
   346                                  XYCul24:	;Plot point In ix,iy,cul
   347 00000218 52                      	push edx
   348                                  
   349 00000219 8B7DF0                  	mov edi,bmpt	;->pic1
   350 0000021C 8B45E4                  	mov eax,ix
   351 0000021F BB03000000              	mov ebx,3
   352 00000224 F7E3                    	mul ebx			;3*ix
   353 00000226 01C7                    	add edi,eax		;edi + 3*ix
   354 00000228 8B45FC                  	mov eax,bmW
   355 0000022B F7E3                    	mul ebx
   356 0000022D 8B5DE0                  	mov ebx,iy		 
   357 00000230 F7E3                    	mul ebx			;3*bmW*iy
   358 00000232 01C7                    	add edi,eax		;edi->(ix,iy)
   359                                  
   360 00000234 8B55DC                  	mov edx,cul		;- B G R   -- xx dh dl, Red low in Colors() palette
   361 00000237 0FCA                    	bswap edx		;R G B -   -- xx dh dl
   362 00000239 8837                    	mov [edi],dh	;B
   363 0000023B 47                      	inc edi
   364 0000023C 0FCA                    	bswap edx		;- B G R   -- xx dh dl
   365 0000023E 8837                    	mov [edi],dh	;G
   366 00000240 47                      	inc edi
   367 00000241 8817                    	mov [edi],dl	;R
   368                                  	
   369 00000243 5A                      	pop edx
   370 00000244 C3                      ret
   371                                  ;====================================================
   372                                  XYCul16:	;Plot point In ix,iy,cul
   373 00000245 52                      	push edx
   374                                  	
   375                                  	;Get 16bit address from ix,iy
   376 00000246 8B7DF0                  	mov edi,bmpt	;->pic1
   377 00000249 8B45E4                  	mov eax,ix
   378 0000024C BB02000000              	mov ebx,2
   379 00000251 F7E3                    	mul ebx			;2*ix
   380 00000253 01C7                    	add edi,eax		;edi + 2*ix
   381 00000255 8B45FC                  	mov eax,bmW
   382 00000258 F7E3                    	mul ebx
   383 0000025A 8B5DE0                  	mov ebx,iy		 
   384 0000025D F7E3                    	mul ebx			;2*bmW*iy
   385 0000025F 01C7                    	add edi,eax		;edi->(ix,iy)
   386                                  	
   387                                  		;In eax 24bit from palette  Out ax 16bit
   388                                  	
   389 00000261 8B55DC                  		mov edx,cul		;- B G R   -- xx dh dl, Red low in Colors() palette
   390 00000264 66B80000                		mov ax,0	
   391                                  					;    16-bit memcolor
   392                                  					;    R       G       B
   393                                  					;0(11111)(11 | 111)(11111)
   394 00000268 66BB0000                		mov bx,0
   395 0000026C 88D7                    		mov bh,dl		;RED 0-255
   396 0000026E C0EF03                  		shr bh,3		;RED\8 
   397 00000271 66C1E302                		shl bx,2		;01111100 00000000
   398 00000275 6609D8                  		or ax,bx
   399                                  		
   400 00000278 66BB0000                		mov bx,0
   401 0000027C 88F7                    		mov bh,dh		;GREEN 0-255
   402 0000027E C0EF03                  		shr bh,3		;GREEN\8
   403 00000281 66C1EB03                		shr bx,3		;00000011 11100000
   404 00000285 6609D8                  		or ax,bx	
   405                                  	
   406 00000288 66BB0000                		mov bx,0
   407 0000028C 0FCA                    		bswap edx		;R G B -   -- xx dh dl
   408 0000028E 88F3                    		mov bl,dh		;BLUE 0-255
   409 00000290 C0EB03                  		shr bl,3		;BLUE\8   00000000 00011111
   410 00000293 6609D8                  		or ax,bx		;   R        G       B
   411                                  					;0(11111)(11 | 111)(11111)
   412 00000296 668907                  		mov [edi],ax	;RGB 16-bit
   413                                  
   414 00000299 5A                      	pop edx
   415 0000029A C3                      ret
   416                                  ;====================================================
   417                                  Get24EDI:
   418 0000029B 8B7DF0                  	mov edi,bmpt	;->pic1
   419 0000029E 8B45E4                  	mov eax,ix
   420 000002A1 BB03000000              	mov ebx,3
   421 000002A6 F7E3                    	mul ebx			;3*ix
   422 000002A8 01C7                    	add edi,eax		;edi + 3*ix
   423 000002AA 8B45FC                  	mov eax,bmW
   424 000002AD F7E3                    	mul ebx
   425 000002AF 8B5DE0                  	mov ebx,iy		 
   426 000002B2 F7E3                    	mul ebx			;3*bmW*iy
   427 000002B4 01C7                    	add edi,eax		;edi->(ix,iy)
   428 000002B6 C3                      ret
   429                                  Get16EDI:
   430 000002B7 8B7DF0                  	mov edi,bmpt	;->pic1
   431 000002BA 8B45C0                  	mov eax,tix
   432 000002BD BB02000000              	mov ebx,2
   433 000002C2 F7E3                    	mul ebx			;2*ix
   434 000002C4 01C7                    	add edi,eax		;edi + 3*ix
   435 000002C6 8B45FC                  	mov eax,bmW
   436 000002C9 F7E3                    	mul ebx
   437 000002CB 8B5DBC                  	mov ebx,tiy		 
   438 000002CE F7E3                    	mul ebx			;3*bmW*iy
   439 000002D0 01C7                    	add edi,eax		;edi->(ix,iy)
   440 000002D2 C3                      ret
   441                                  ENDS
   442                                  
   443                                  
